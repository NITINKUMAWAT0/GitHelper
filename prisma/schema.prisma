generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model User {
  id            String          @id @default(cuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now())
  imageUrl      String?
  firstName     String?
  lastName      String?
  emailAddress  String          @unique
  credits       Int             @default(1000)
  userToProject UserToProject[]
}

model Project {
  id                  String                @id @default(uuid())
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  name                String
  githubUrl           String
  deletedAt           DateTime?
  Commit              Commit[]
  SourceCodeEmbedding SourceCodeEmbedding[]
  userToProject       UserToProject[]
}

model UserToProject {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  userId    String
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, projectId])
}

model SourceCodeEmbedding {
  id               String                 @id @default(uuid())
  summaryEmbedding Unsupported("vector")?
  sourceCode       String
  fileName         String
  summary          String
  projectId        String
  project          Project                @relation(fields: [projectId], references: [id])
}

model Commit {
  id                 String   @id @default(cuid())
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  projectId          String
  commitMessage      String
  commitHash         String
  commitAuthorName   String
  commitAuthorAvatar String
  commitDate         DateTime
  summary            String
  project            Project  @relation(fields: [projectId], references: [id])
}
